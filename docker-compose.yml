version: '3'

services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: >
      sh -c "python3 manage.py wait_for_db &&
             python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py create_groups &&
             python3 manage.py create_admin &&
             python3 manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=$DB_HOST
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
    depends_on:
      - db
  db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=$DB_NAME
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASS
    volumes:
      - pgdata:/var/lib/postgresql/data
  adminer:
    image: adminer
    restart: always
    ports:
      - 18080:8080
    depends_on:
      - db
  redis:
    image: redis:latest
  celery:
    restart: always
    build:
      context: .
    command: celery --app=crmdev worker -Q order,other -l debug -c 2
    environment:
      - DB_HOST=$DB_HOST
      - DB_NAME=$DB_NAME
      - DB_USER=$DB_USER
      - DB_PASS=$DB_PASS
    depends_on:
      - db
      - redis
      - app
volumes:
  pgdata: